{"version":3,"sources":["services/api.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","services/getIconStatus.js","services/getIconSpecies.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","services/localStorage.js","images/Rick_and_Morty_logo.png","components/App.js","reportWebVitals.js","index.js"],"names":["getApiData","fetch","then","res","json","data","results","map","eachCharacter","id","name","img","image","species","status","origin","episode","FilterByName","props","className","type","value","filterName","onChange","ev","handleFilter","target","key","FilterBySpecies","filterSpecies","Filters","dead","alive","unknown","iconStatus","human","alien","iconSpecies","CharacterCard","to","src","title","alt","CharacterList","characters","length","characterCard","CharacterDetail","character","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","charactersLocalStorageData","ls","App","useState","setCharacters","setFilterName","setFilterSpecies","useEffect","charactersData","filteredCharacters","filter","toLowerCase","includes","logo","path","render","routeCharacterId","match","params","foundCharacter","find","parseInt","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.467e4aca.chunk.js","sourcesContent":["function getApiData() {\r\n  //a√±adimos return porque la funci√≥n getApiData tiene que retornar algo\r\n  //sino saldr√≠a undefined\r\n  return fetch(`https://rickandmortyapi.com/api/character`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      //filtramos los datos que nos interesan con un map\r\n      //los retornamos en un objeto y los a√±adimos al array filteredData\r\n      const filteredData = data.results.map((eachCharacter) => {\r\n        return {\r\n          id: eachCharacter.id,\r\n          name: eachCharacter.name,\r\n          img: eachCharacter.image,\r\n          species: eachCharacter.species,\r\n          status: eachCharacter.status,\r\n          origin: eachCharacter.origin,\r\n          episode: eachCharacter.episode,\r\n        };\r\n      });\r\n\r\n      return filteredData;\r\n    });\r\n}\r\n\r\nexport default getApiData;\r\n","function FilterByName(props) {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"inputSearch\"\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      value={props.filterName}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FilterByName;\r\n","function FilterBySpecies(props) {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <select\r\n      className=\"inputSelect\"\r\n      name=\"species\"\r\n      id=\"species\"\r\n      value={props.filterSpecies}\r\n      onChange={handleChange}>\r\n      <option value=\"All\">Todos</option>\r\n      <option value=\"Human\">Humano</option>\r\n      <option value=\"Alien\">Alien</option>\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default FilterBySpecies;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\n\r\nfunction Filters(props) {\r\n  return (\r\n    <form className=\"Filters\">\r\n      <FilterByName\r\n        filterName={props.filterName}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n      <FilterBySpecies\r\n        filterSpecies={props.filterSpecies}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n","const dead = <span>üíÄ</span>;\r\n\r\nconst alive = <span>üíö</span>;\r\n\r\nconst unknown = <span>‚ùî</span>;\r\n\r\nconst iconStatus = (status) => {\r\n  if (status === \"Alive\") {\r\n    return alive;\r\n  } else if (status === \"Dead\") {\r\n    return dead;\r\n  } else {\r\n    return unknown;\r\n  }\r\n};\r\n\r\nexport default iconStatus;\r\n","const human = <span>üë§</span>;\r\n\r\nconst alien = <span>üëΩ</span>;\r\n\r\nconst iconSpecies = (species) => {\r\n  if (species === \"Human\") {\r\n    return human;\r\n  } else if (species === \"Alien\") {\r\n    return alien;\r\n  }\r\n};\r\n\r\nexport default iconSpecies;\r\n","import { Link } from \"react-router-dom\";\r\nimport iconStatus from \"../services/getIconStatus\";\r\nimport iconSpecies from \"../services/getIconSpecies\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CharacterCard(props) {\r\n  return (\r\n    <Link to={`/character/${props.eachCharacter.id}`}>\r\n      <article className=\"CharacterCard\">\r\n        <img\r\n          src={props.eachCharacter.img}\r\n          title={props.eachCharacter.name}\r\n          alt={props.eachCharacter.name}\r\n        />\r\n        <ul className=\"characterInfo\">\r\n          <li>\r\n            <h3>{props.eachCharacter.name}</h3>\r\n          </li>\r\n          <li>\r\n            {props.eachCharacter.species}{\" \"}\r\n            {iconSpecies(props.eachCharacter.species)}\r\n          </li>\r\n          <li>{iconStatus(props.eachCharacter.status)}</li>\r\n        </ul>\r\n      </article>\r\n    </Link>\r\n  );\r\n}\r\n\r\nCharacterCard.propTypes = {\r\n  eachCharacter: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n    photo: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nfunction CharacterList(props) {\r\n  if (props.characters.length === 0) {\r\n    return (\r\n      <p className=\"notFoundMessage\">\r\n        Personaje no encontrado {props.filterName}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const characterCard = props.characters.map((eachCharacter) => {\r\n    return (\r\n      <li key={eachCharacter.id}>\r\n        <CharacterCard eachCharacter={eachCharacter} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"CharacterList\">{characterCard}</ul>;\r\n}\r\n\r\nexport default CharacterList;\r\n","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CharacterDetail(props) {\r\n  return (\r\n    <Link to=\"/\">\r\n      <div className=\"CharacterDetailBackground\">\r\n        <article className=\"CharacterDetail\">\r\n          <img\r\n            src={props.character.img}\r\n            title={props.character.name}\r\n            alt={props.character.name}\r\n          />\r\n          <div className=\"characterInfo\">\r\n            <h3>{props.character.name}</h3>\r\n            <ul>\r\n              <li>Status: {props.character.status}</li>\r\n              <li>Especie: {props.character.species}</li>\r\n              <li>Origen: {props.character.origin.name}</li>\r\n              <li>Aparece en: {props.character.episode.length} episodios</li>\r\n            </ul>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nCharacterDetail.propTypes = {\r\n  character: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n    photo: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CharacterDetail;\r\n","function get(key, defaultData) {\r\n  const data = localStorage.getItem(key);\r\n  //si lo que me devuelve es null, es que no tengo data\r\n  //y si no tengo data, return una data por default que yo te diga\r\n  //para que no haya ning√∫n momento donde salga undefined\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n}\r\n\r\nfunction set(key, value) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nexport default {\r\n  get: get,\r\n  set: set,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","import { Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"../stylesheets/App.css\";\nimport getApiData from \"../services/api\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport ls from \"../services/localStorage\";\nimport logo from \"../images/Rick_and_Morty_logo.png\";\n\n//podemos crear una const para pedir el localStorage fuera del componente\n//porque solo queremos que se ejecute una vez, no cada vez que se renderice\n//aunque funcionar√≠a tanto si est√° fuera como si est√° dentro\n//el array vac√≠o significa que if characters is undefined, ponme []\nconst charactersLocalStorageData = ls.get(\"characters\", []);\n\nfunction App() {\n  const [characters, setCharacters] = useState(charactersLocalStorageData);\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"All\")\n  );\n\n  useEffect(\n    () => {\n      //montaje, llamamos a la api\n\n      if (characters.length === 0) {\n        getApiData().then((charactersData) => {\n          //los datos que se guardan en el state son el filteredData del fetch\n          //por eso usamos then, porque lo que retorna el primer then, lo recibe el siguiente then\n          //esto es porque los then se encadenan\n          setCharacters(charactersData);\n        });\n      }\n    },\n    [] /* cu√°ndo ejecutar useEffect */\n  );\n\n  //guardamos en localStorage\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  useEffect(() => {\n    ls.set(\"filterName\", filterName);\n  }, [filterName]);\n\n  useEffect(() => {\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [filterSpecies]);\n\n  //EV HANDLER\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecies(data.value);\n    }\n  };\n\n  //RENDER\n  //filtramos por personaje y comprobamos si incluyen el filterName\n  const filteredCharacters = characters\n    .filter((eachCharacter) => {\n      return eachCharacter.name\n        .toLowerCase()\n        .includes(filterName.toLowerCase());\n    })\n    .filter((eachCharacter) => {\n      if (filterSpecies === \"All\") {\n        return true;\n      } else {\n        return eachCharacter.species === filterSpecies;\n      }\n    });\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find((eachCharacter) => {\n      //b√∫scame el id que sea igual al routeCharacterId\n      //pasamos a entero el routeCharacterId porque era un string\n      return eachCharacter.id === parseInt(routeCharacterId);\n    });\n\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <p className=\"notFoundMessage\">Personaje no encontrado</p>;\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <img src={logo} alt=\"Rick and Morty logotipo\" title=\"Rick and Morty\" />\n        <Filters\n          filterName={filterName}\n          filterSpecies={filterSpecies}\n          handleFilter={handleFilter}\n        />\n      </header>\n      <main className=\"main\">\n        <CharacterList\n          filterName={filterName}\n          characters={filteredCharacters}\n        />\n        <Switch>\n          <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}